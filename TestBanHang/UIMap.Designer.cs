// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace TestBanHang
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public partial class UIMap
    {
        
        /// <summary>
        /// RecordedMethod_Them - Use 'RecordedMethod_ThemParams' to pass parameters into this method.
        /// </summary>
        public void RecordedMethod_Them()
        {
            #region Variable Declarations
            WinButton uIItemButton = this.UIBánhàngWindow.UIItemWindow.UIItemButton;
            WinComboBox uICboTenLoaiComboBox = this.UIBánhàngWindow.UICboTenLoaiWindow.UICboTenLoaiComboBox;
            WinComboBox uITênthuốcComboBox = this.UIBánhàngWindow.UICboTenThuocWindow.UITênthuốcComboBox;
            WinEdit uINumericUpDownEdit = this.UIBánhàngWindow.UINumericUpDownSpinner.UINumericUpDownEdit;
            WinGroup uIThôngtinGroup = this.UIBánhàngWindow.UIThôngtinWindow.UIThôngtinGroup;
            WinButton uIThêmButton = this.UIBánhàngWindow.UIThêmWindow.UIThêmButton;
            WinButton uIOKButton = this.UIOKWindow.UIOKButton;
            WinEdit uITxtTienKhachDuaEdit = this.UIBánhàngWindow.UITxtTienKhachDuaWindow.UITxtTienKhachDuaEdit;
            #endregion

            // Click '+' button
            Mouse.Click(uIItemButton, new Point(1, 8));

            // Select 'THUỐC CHỐNG ỐI' in 'cboTenLoai' combo box
            uICboTenLoaiComboBox.SelectedItem = this.RecordedMethod_ThemParams.UICboTenLoaiComboBoxSelectedItem;

            // Select 'THUỐC CHỐNG ÓI Bestrip' in 'Tên thuốc' combo box
            uITênthuốcComboBox.SelectedItem = this.RecordedMethod_ThemParams.UITênthuốcComboBoxSelectedItem;

            // Double-Click 'NumericUpDown' text box
            Mouse.DoubleClick(uINumericUpDownEdit, new Point(8, 4));

            // Type '10' in 'NumericUpDown' text box
            Keyboard.SendKeys(uINumericUpDownEdit, this.RecordedMethod_ThemParams.UINumericUpDownEditSendKeys, ModifierKeys.None);

            // Click 'Thông tin' group
            Mouse.Click(uIThôngtinGroup, new Point(472, 56));

            // Click 'Thêm' button
            Mouse.Click(uIThêmButton, new Point(27, 13));

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(14, 13));

            // Type '950000' in 'txtTienKhachDua' text box
            uITxtTienKhachDuaEdit.Text = this.RecordedMethod_ThemParams.UITxtTienKhachDuaEditText;
        }
        
        /// <summary>
        /// AssertMethod_TienThua - Use 'AssertMethod_TienThuaExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethod_TienThua()
        {
            #region Variable Declarations
            WinEdit uITxtTienThuaEdit = this.UIBánhàngWindow.UITxtTienThuaWindow.UITxtTienThuaEdit;
            #endregion

            // Verify that the 'ControlType' property of 'txtTienThua' text box equals 'Edit'
            Assert.AreEqual(this.AssertMethod_TienThuaExpectedValues.UITxtTienThuaEditControlType, uITxtTienThuaEdit.ControlType.ToString());
        }
        
        /// <summary>
        /// AssertMethod_ThanhToanThanhCong - Use 'AssertMethod_ThanhToanThanhCongExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethod_ThanhToanThanhCong()
        {
            #region Variable Declarations
            WinText uIThanhtoánthànhcôngText = this.UIThanhtoánthànhcôngWindow.UIThanhtoánthànhcôngText;
            #endregion

            // Verify that the 'ControlType' property of 'Thanh toán thành công!' label equals 'Text'
            Assert.AreEqual(this.AssertMethod_ThanhToanThanhCongExpectedValues.UIThanhtoánthànhcôngTextControlType, uIThanhtoánthànhcôngText.ControlType.ToString());
        }
        
        /// <summary>
        /// RecordedMethod_ThanhToan - Use 'RecordedMethod_ThanhToanParams' to pass parameters into this method.
        /// </summary>
        public void RecordedMethod_ThanhToan()
        {
            #region Variable Declarations
            WinButton uIItemButton = this.UIBánhàngWindow.UIItemWindow.UIItemButton;
            WinComboBox uICboTenLoaiComboBox = this.UIBánhàngWindow.UICboTenLoaiWindow.UICboTenLoaiComboBox;
            WinComboBox uITênthuốcComboBox = this.UIBánhàngWindow.UICboTenThuocWindow.UITênthuốcComboBox;
            WinEdit uINumericUpDownEdit = this.UIBánhàngWindow.UINumericUpDownSpinner.UINumericUpDownEdit;
            WinGroup uIThôngtinGroup = this.UIBánhàngWindow.UIThôngtinWindow.UIThôngtinGroup;
            WinButton uIThêmButton = this.UIBánhàngWindow.UIThêmWindow.UIThêmButton;
            WinButton uIOKButton = this.UIOKWindow.UIOKButton;
            WinWindow uITxtTienKhachDuaWindow = this.UIBánhàngWindow.UIThôngtinGroup.UITxtTienKhachDuaWindow;
            WinEdit uITxtTienKhachDuaEdit = this.UIBánhàngWindow.UITxtTienKhachDuaWindow.UITxtTienKhachDuaEdit;
            WinButton uIThanhtoánButton = this.UIBánhàngWindow.UIThanhtoánWindow.UIThanhtoánButton;
            WinGroup uILINEGroup = this.UILINEWindow.UILINEWindow1.UILINEGroup;
            WinEdit uITxtGiaEdit = this.UIBánhàngWindow.UITxtGiaWindow.UITxtGiaEdit;
            WinEdit uITxtTTEdit = this.UIBánhàngWindow.UITxtTTWindow.UITxtTTEdit;
            #endregion

            // Click '+' button
            Mouse.Click(uIItemButton, new Point(18, 3));

            // Select 'THUỐC TRỊ  NHỨC ĐẦU' in 'cboTenLoai' combo box
            uICboTenLoaiComboBox.SelectedItem = this.RecordedMethod_ThanhToanParams.UICboTenLoaiComboBoxSelectedItem;

            // Select 'THUỐC NHỨC ĐẦU Decolgen ND' in 'Tên thuốc' combo box
            uITênthuốcComboBox.SelectedItem = this.RecordedMethod_ThanhToanParams.UITênthuốcComboBoxSelectedItem;

            // Double-Click 'NumericUpDown' text box
            Mouse.DoubleClick(uINumericUpDownEdit, new Point(6, 11));

            // Type '8' in 'NumericUpDown' text box
            Keyboard.SendKeys(uINumericUpDownEdit, this.RecordedMethod_ThanhToanParams.UINumericUpDownEditSendKeys, ModifierKeys.None);

            // Click 'Thông tin' group
            Mouse.Click(uIThôngtinGroup, new Point(485, 68));

            // Click 'Thêm' button
            Mouse.Click(uIThêmButton, new Point(20, 15));

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(19, 14));

            // Double-Click 'txtTienKhachDua' window
            Mouse.DoubleClick(uITxtTienKhachDuaWindow, new Point(47, 1));

            // Click 'txtTienKhachDua' window
            Mouse.Click(uITxtTienKhachDuaWindow, new Point(47, 1));

            // Type '848000' in 'txtTienKhachDua' text box
            uITxtTienKhachDuaEdit.Text = this.RecordedMethod_ThanhToanParams.UITxtTienKhachDuaEditText;

            // Click 'Thanh toán' button
            Mouse.Click(uIThanhtoánButton, new Point(5, 12));

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(25, 10));

            // Click 'LINE' group
            Mouse.Click(uILINEGroup, new Point(41, 15));

            // Click 'LINE' group
            Mouse.Click(uILINEGroup, new Point(235, 4));

            // Click '+' button
            Mouse.Click(uIItemButton, new Point(16, 8));

            // Select 'THUỐC CHỐNG ỐI' in 'cboTenLoai' combo box
            uICboTenLoaiComboBox.SelectedItem = this.RecordedMethod_ThanhToanParams.UICboTenLoaiComboBoxSelectedItem1;

            // Select 'THUỐC CHỐNG ÓI Bestrip' in 'Tên thuốc' combo box
            uITênthuốcComboBox.SelectedItem = this.RecordedMethod_ThanhToanParams.UITênthuốcComboBoxSelectedItem1;

            // Click 'NumericUpDown' text box
            Mouse.Click(uINumericUpDownEdit, new Point(10, 13));

            // Type '2' in 'NumericUpDown' text box
            Keyboard.SendKeys(uINumericUpDownEdit, this.RecordedMethod_ThanhToanParams.UINumericUpDownEditSendKeys1, ModifierKeys.None);

            // Click 'txtGia' text box
            Mouse.Click(uITxtGiaEdit, new Point(61, 11));

            // Click 'txtTT' text box
            Mouse.Click(uITxtTTEdit, new Point(50, 7));

            // Click 'Thêm' button
            Mouse.Click(uIThêmButton, new Point(21, 12));

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(25, 10));

            // Type '1140000' in 'txtTienKhachDua' text box
            uITxtTienKhachDuaEdit.Text = this.RecordedMethod_ThanhToanParams.UITxtTienKhachDuaEditText1;

            // Click 'Thanh toán' button
            Mouse.Click(uIThanhtoánButton, new Point(38, 14));
        }
        
        /// <summary>
        /// RecordedMethod_ThanhToanTC - Use 'RecordedMethod_ThanhToanTCParams' to pass parameters into this method.
        /// </summary>
        public void RecordedMethod_ThanhToanTC()
        {
            #region Variable Declarations
            WinButton uIItemButton = this.UIBánhàngWindow.UIItemWindow.UIItemButton;
            WinComboBox uICboTenLoaiComboBox = this.UIBánhàngWindow.UICboTenLoaiWindow.UICboTenLoaiComboBox;
            WinComboBox uITênthuốcComboBox = this.UIBánhàngWindow.UICboTenThuocWindow.UITênthuốcComboBox;
            WinEdit uINumericUpDownEdit = this.UIBánhàngWindow.UINumericUpDownSpinner.UINumericUpDownEdit;
            WinButton uIThêmButton = this.UIBánhàngWindow.UIThêmWindow.UIThêmButton;
            WinButton uIOKButton = this.UIOKWindow.UIOKButton;
            WinEdit uITxtTienKhachDuaEdit = this.UIBánhàngWindow.UITxtTienKhachDuaWindow.UITxtTienKhachDuaEdit;
            WinButton uIThanhtoánButton = this.UIBánhàngWindow.UIThanhtoánWindow.UIThanhtoánButton;
            #endregion

            // Click '+' button
            Mouse.Click(uIItemButton, new Point(10, 9));

            // Select 'THUỐC SỔ MŨI' in 'cboTenLoai' combo box
            uICboTenLoaiComboBox.SelectedItem = this.RecordedMethod_ThanhToanTCParams.UICboTenLoaiComboBoxSelectedItem;

            // Select 'THUỐC SỔ MŨI Coldacmin Flu' in 'Tên thuốc' combo box
            uITênthuốcComboBox.SelectedItem = this.RecordedMethod_ThanhToanTCParams.UITênthuốcComboBoxSelectedItem;

            // Click 'NumericUpDown' text box
            Mouse.Click(uINumericUpDownEdit, new Point(9, 10));

            // Type '22{Back}' in 'NumericUpDown' text box
            Keyboard.SendKeys(uINumericUpDownEdit, this.RecordedMethod_ThanhToanTCParams.UINumericUpDownEditSendKeys, ModifierKeys.None);

            // Click 'Thêm' button
            Mouse.Click(uIThêmButton, new Point(30, 17));

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(33, 12));

            // Type '36000' in 'txtTienKhachDua' text box
            uITxtTienKhachDuaEdit.Text = this.RecordedMethod_ThanhToanTCParams.UITxtTienKhachDuaEditText;

            // Click 'Thanh toán' button
            Mouse.Click(uIThanhtoánButton, new Point(22, 14));
        }
        
        /// <summary>
        /// RecordedMethod_ThanhToanHD - Use 'RecordedMethod_ThanhToanHDParams' to pass parameters into this method.
        /// </summary>
        public void RecordedMethod_ThanhToanHD()
        {
            #region Variable Declarations
            WinButton uIItemButton = this.UIBánhàngWindow.UIItemWindow.UIItemButton;
            WinComboBox uICboTenLoaiComboBox = this.UIBánhàngWindow.UICboTenLoaiWindow.UICboTenLoaiComboBox;
            WinGroup uIThôngtinGroup = this.UIBánhàngWindow.UIThôngtinWindow.UIThôngtinGroup;
            WinComboBox uITênthuốcComboBox = this.UIBánhàngWindow.UICboTenThuocWindow.UITênthuốcComboBox;
            WinEdit uINumericUpDownEdit = this.UIBánhàngWindow.UINumericUpDownSpinner.UINumericUpDownEdit;
            WinButton uIThêmButton = this.UIBánhàngWindow.UIThêmWindow.UIThêmButton;
            WinButton uIOKButton = this.UIOKWindow.UIOKButton;
            WinEdit uITxtTienKhachDuaEdit = this.UIBánhàngWindow.UITxtTienKhachDuaWindow.UITxtTienKhachDuaEdit;
            WinButton uIThanhtoánButton = this.UIBánhàngWindow.UIThanhtoánWindow.UIThanhtoánButton;
            #endregion

            // Click '+' button
            Mouse.Click(uIItemButton, new Point(3, 14));

            // Select 'THUỐC TRỊ  NHỨC ĐẦU' in 'cboTenLoai' combo box
            uICboTenLoaiComboBox.SelectedItem = this.RecordedMethod_ThanhToanHDParams.UICboTenLoaiComboBoxSelectedItem;

            // Click 'Thông tin' group
            Mouse.Click(uIThôngtinGroup, new Point(560, 32));

            // Select 'THUỐC NHỨC ĐẦU PARADOL' in 'Tên thuốc' combo box
            uITênthuốcComboBox.SelectedItem = this.RecordedMethod_ThanhToanHDParams.UITênthuốcComboBoxSelectedItem;

            // Double-Click 'NumericUpDown' text box
            Mouse.DoubleClick(uINumericUpDownEdit, new Point(10, 7));

            // Type '4' in 'NumericUpDown' text box
            Keyboard.SendKeys(uINumericUpDownEdit, this.RecordedMethod_ThanhToanHDParams.UINumericUpDownEditSendKeys, ModifierKeys.None);

            // Click 'Thêm' button
            Mouse.Click(uIThêmButton, new Point(3, 16));

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(20, 6));

            // Type '4000' in 'txtTienKhachDua' text box
            uITxtTienKhachDuaEdit.Text = this.RecordedMethod_ThanhToanHDParams.UITxtTienKhachDuaEditText;

            // Click 'Thanh toán' button
            Mouse.Click(uIThanhtoánButton, new Point(27, 10));
        }
        
        /// <summary>
        /// AssertMethod_ThemThanhCong - Use 'AssertMethod_ThemThanhCongExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethod_ThemThanhCong()
        {
            #region Variable Declarations
            WinText uIThêmThànhcôngText = this.UIThêmThànhcôngWindow.UIThêmThànhcôngText;
            #endregion

            // Verify that the 'ControlType' property of 'Thêm Thành công' label equals 'Text'
            Assert.AreEqual(this.AssertMethod_ThemThanhCongExpectedValues.UIThêmThànhcôngTextControlType, uIThêmThànhcôngText.ControlType.ToString());
        }
        
        /// <summary>
        /// AssertMethod_KQThem - Use 'AssertMethod_KQThemExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethod_KQThem()
        {
            #region Variable Declarations
            WinText uIThêmThànhcôngText = this.UIThêmThànhcôngWindow.UIThêmThànhcôngText;
            #endregion

            // Verify that the 'ControlType' property of 'Thêm Thành công' label equals 'Text'
            Assert.AreEqual(this.AssertMethod_KQThemExpectedValues.UIThêmThànhcôngTextControlType, uIThêmThànhcôngText.ControlType.ToString());
        }
        
        /// <summary>
        /// RecordedMethod_ChucNangThem - Use 'RecordedMethod_ChucNangThemParams' to pass parameters into this method.
        /// </summary>
        public void RecordedMethod_ChucNangThem()
        {
            #region Variable Declarations
            WinButton uIItemButton = this.UIBánhàngWindow.UIItemWindow.UIItemButton;
            WinComboBox uICboTenLoaiComboBox = this.UIBánhàngWindow.UICboTenLoaiWindow.UICboTenLoaiComboBox;
            WinComboBox uITênthuốcComboBox = this.UIBánhàngWindow.UICboTenThuocWindow.UITênthuốcComboBox;
            WinEdit uINumericUpDownEdit = this.UIBánhàngWindow.UINumericUpDownSpinner.UINumericUpDownEdit;
            WinGroup uIThôngtinGroup = this.UIBánhàngWindow.UIThôngtinWindow.UIThôngtinGroup;
            WinButton uIThêmButton = this.UIBánhàngWindow.UIThêmWindow.UIThêmButton;
            WinButton uIOKButton = this.UIOKWindow.UIOKButton;
            #endregion

            // Click '+' button
            Mouse.Click(uIItemButton, new Point(13, 3));

            // Select 'THUỐC TRỊ  NHỨC ĐẦU' in 'cboTenLoai' combo box
            uICboTenLoaiComboBox.SelectedItem = this.RecordedMethod_ChucNangThemParams.UICboTenLoaiComboBoxSelectedItem;

            // Select 'THUỐC NHỨC ĐẦU Decolgen ND' in 'Tên thuốc' combo box
            uITênthuốcComboBox.SelectedItem = this.RecordedMethod_ChucNangThemParams.UITênthuốcComboBoxSelectedItem;

            // Click 'NumericUpDown' text box
            Mouse.Click(uINumericUpDownEdit, new Point(11, 5));

            // Double-Click 'NumericUpDown' text box
            Mouse.DoubleClick(uINumericUpDownEdit, new Point(11, 5));

            // Type '4' in 'NumericUpDown' text box
            Keyboard.SendKeys(uINumericUpDownEdit, this.RecordedMethod_ChucNangThemParams.UINumericUpDownEditSendKeys, ModifierKeys.None);

            // Click 'Thông tin' group
            Mouse.Click(uIThôngtinGroup, new Point(414, 75));

            // Click 'Thêm' button
            Mouse.Click(uIThêmButton, new Point(24, 18));

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(50, 11));
        }
        
        /// <summary>
        /// AssertMethod_ChucNangThem - Use 'AssertMethod_ChucNangThemExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethod_ChucNangThem()
        {
            #region Variable Declarations
            WinControl uIItemDialog = this.UIItemWindow.UIItemWindow1.UIItemDialog;
            #endregion

            // Verify that the 'ControlType' property of Dialog equals 'Dialog'
            Assert.AreEqual(this.AssertMethod_ChucNangThemExpectedValues.UIItemDialogControlType, uIItemDialog.ControlType.ToString());
        }
        
        /// <summary>
        /// RecordedMethod_Xoa
        /// </summary>
        public void RecordedMethod_Xoa()
        {
            #region Variable Declarations
            WinCell uITHUỐCSỔMŨIHadocolcenCell = this.UIBánhàngWindow.UIDgvBHWindow.UIDataGridViewTable.UIRow0Row.UITHUỐCSỔMŨIHadocolcenCell;
            WinEdit uITênthuốcEdit = this.UIBánhàngWindow.UIItemWindow1.UITênthuốcEdit;
            WinEdit uIItemEdit = this.UIBánhàngWindow.UIItemWindow11.UIItemEdit;
            WinButton uIXóaButton = this.UIBánhàngWindow.UIXóaWindow.UIXóaButton;
            #endregion

            // Last mouse action was not recorded.

            // Click 'THUỐC SỔ MŨI Hadocolcen' cell
            Mouse.Click(uITHUỐCSỔMŨIHadocolcenCell, new Point(44, 16));

            // Click 'Tên thuốc' text box
            Mouse.Click(uITênthuốcEdit, new Point(97, 14));

            // Click text box
            Mouse.Click(uIItemEdit, new Point(48, 5));

            // Click 'Xóa' button
            Mouse.Click(uIXóaButton, new Point(26, 16));
        }
        
        /// <summary>
        /// RecordedMethod_ThemThanhCong - Use 'RecordedMethod_ThemThanhCongParams' to pass parameters into this method.
        /// </summary>
        public void RecordedMethod_ThemThanhCong()
        {
            #region Variable Declarations
            WinComboBox uICboTenLoaiComboBox = this.UIBánhàngWindow.UICboTenLoaiWindow.UICboTenLoaiComboBox;
            WinComboBox uITênthuốcComboBox = this.UIBánhàngWindow.UICboTenThuocWindow.UITênthuốcComboBox;
            WinButton uIUPButton = this.UIBánhàngWindow.UISpinnerSpinner.UIUPButton;
            WinEdit uINumericUpDownEdit = this.UIBánhàngWindow.UINumericUpDownSpinner.UINumericUpDownEdit;
            WinButton uIThêmButton = this.UIBánhàngWindow.UIThêmWindow.UIThêmButton;
            #endregion

            // Select 'THUỐC SỔ MŨI' in 'cboTenLoai' combo box
            uICboTenLoaiComboBox.SelectedItem = this.RecordedMethod_ThemThanhCongParams.UICboTenLoaiComboBoxSelectedItem;

            // Select 'THUỐC SỔ MŨI Coldacmin Flu' in 'Tên thuốc' combo box
            uITênthuốcComboBox.SelectedItem = this.RecordedMethod_ThemThanhCongParams.UITênthuốcComboBoxSelectedItem;

            // Double-Click 'Up' button
            Mouse.DoubleClick(uIUPButton, new Point(12, 4));

            // Click 'NumericUpDown' text box
            Mouse.Click(uINumericUpDownEdit, new Point(7, 7));

            // Click 'Thêm' button
            Mouse.Click(uIThêmButton, new Point(19, 16));
        }
        
        /// <summary>
        /// TC_Them - Use 'TC_ThemParams' to pass parameters into this method.
        /// </summary>
        public void TC_Them()
        {
            #region Variable Declarations
            WinGroup uIThôngtinGroup = this.UIBánhàngWindow.UIThôngtinWindow.UIThôngtinGroup;
            WinComboBox uICboTenLoaiComboBox = this.UIBánhàngWindow.UICboTenLoaiWindow.UICboTenLoaiComboBox;
            WinComboBox uITênthuốcComboBox = this.UIBánhàngWindow.UICboTenThuocWindow.UITênthuốcComboBox;
            WinEdit uINumericUpDownEdit = this.UIBánhàngWindow.UINumericUpDownSpinner.UINumericUpDownEdit;
            WinButton uIThêmButton = this.UIBánhàngWindow.UIThêmWindow.UIThêmButton;
            #endregion

            // Move 'Thông tin' group
            Mouse.StartDragging(uIThôngtinGroup, new Point(211, 59));
            Mouse.StopDragging(uIThôngtinGroup, 0, -7);

            // Select 'THUỐC SỐT' in 'cboTenLoai' combo box
            uICboTenLoaiComboBox.SelectedItem = this.TC_ThemParams.UICboTenLoaiComboBoxSelectedItem;

            // Select 'THUỐC SỐT Paracetamol' in 'Tên thuốc' combo box
            uITênthuốcComboBox.SelectedItem = this.TC_ThemParams.UITênthuốcComboBoxSelectedItem;

            // Double-Click 'NumericUpDown' text box
            Mouse.DoubleClick(uINumericUpDownEdit, new Point(5, 11));

            // Type '4' in 'NumericUpDown' text box
            Keyboard.SendKeys(uINumericUpDownEdit, this.TC_ThemParams.UINumericUpDownEditSendKeys, ModifierKeys.None);

            // Click 'Thêm' button
            Mouse.Click(uIThêmButton, new Point(30, 15));
        }
        
        /// <summary>
        /// AssertMethod_TCThem - Use 'AssertMethod_TCThemExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethod_TCThem()
        {
            #region Variable Declarations
            WinText uIThêmThànhcôngText = this.UIThêmThànhcôngWindow.UIThêmThànhcôngText;
            #endregion

            // Verify that the 'ControlType' property of 'Thêm Thành công' label equals 'Text'
            Assert.AreEqual(this.AssertMethod_TCThemExpectedValues.UIThêmThànhcôngTextControlType, uIThêmThànhcôngText.ControlType.ToString());
        }
        
        /// <summary>
        /// RecordedMethod_TCThem - Use 'RecordedMethod_TCThemParams' to pass parameters into this method.
        /// </summary>
        public void RecordedMethod_TCThem()
        {
            #region Variable Declarations
            WinButton uIItemButton = this.UIBánhàngWindow.UIItemWindow.UIItemButton;
            WinComboBox uICboTenLoaiComboBox = this.UIBánhàngWindow.UICboTenLoaiWindow.UICboTenLoaiComboBox;
            WinComboBox uITênthuốcComboBox = this.UIBánhàngWindow.UICboTenThuocWindow.UITênthuốcComboBox;
            WinEdit uINumericUpDownEdit = this.UIBánhàngWindow.UINumericUpDownSpinner.UINumericUpDownEdit;
            WinButton uIThêmButton = this.UIBánhàngWindow.UIThêmWindow.UIThêmButton;
            #endregion

            // Click '+' button
            Mouse.Click(uIItemButton, new Point(1, 5));

            // Select 'THUỐC SỐT' in 'cboTenLoai' combo box
            uICboTenLoaiComboBox.SelectedItem = this.RecordedMethod_TCThemParams.UICboTenLoaiComboBoxSelectedItem;

            // Select 'Thuốc hạ sốt Tatanol 500mg' in 'Tên thuốc' combo box
            uITênthuốcComboBox.SelectedItem = this.RecordedMethod_TCThemParams.UITênthuốcComboBoxSelectedItem;

            // Double-Click 'NumericUpDown' text box
            Mouse.DoubleClick(uINumericUpDownEdit, new Point(9, 9));

            // Type '5' in 'NumericUpDown' text box
            Keyboard.SendKeys(uINumericUpDownEdit, this.RecordedMethod_TCThemParams.UINumericUpDownEditSendKeys, ModifierKeys.None);

            // Click 'Thêm' button
            Mouse.Click(uIThêmButton, new Point(37, 21));
        }
        
        /// <summary>
        /// RecordedMethod_Sua - Use 'RecordedMethod_SuaParams' to pass parameters into this method.
        /// </summary>
        public void RecordedMethod_Sua()
        {
            #region Variable Declarations
            WinCell uITHUỐCSỐTMỸCell = this.UIBánhàngWindow.UIDgvBHWindow.UIDataGridViewTable.UIRow0Row1.UITHUỐCSỐTMỸCell;
            WinEdit uINumericUpDownEdit = this.UIBánhàngWindow.UINumericUpDownSpinner.UINumericUpDownEdit;
            WinButton uISửaButton = this.UIBánhàngWindow.UISửaWindow.UISửaButton;
            #endregion

            // Click 'THUỐC SỐT MỸ' cell
            Mouse.Click(uITHUỐCSỐTMỸCell, new Point(46, 13));

            // Double-Click 'NumericUpDown' text box
            Mouse.DoubleClick(uINumericUpDownEdit, new Point(9, 4));

            // Type '10' in 'NumericUpDown' text box
            Keyboard.SendKeys(uINumericUpDownEdit, this.RecordedMethod_SuaParams.UINumericUpDownEditSendKeys, ModifierKeys.None);

            // Click 'Sửa' button
            Mouse.Click(uISửaButton, new Point(35, 11));
        }
        
        /// <summary>
        /// AssertMethod_Sua - Use 'AssertMethod_SuaExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethod_Sua()
        {
            #region Variable Declarations
            WinText uISửaThànhcôngText = this.UISửaThànhcôngWindow.UISửaThànhcôngText;
            #endregion

            // Verify that the 'ControlType' property of 'Sửa Thành công' label equals 'Text'
            Assert.AreEqual(this.AssertMethod_SuaExpectedValues.UISửaThànhcôngTextControlType, uISửaThànhcôngText.ControlType.ToString());
        }
        
        /// <summary>
        /// RecordedMethod1_ThanhToan - Use 'RecordedMethod1_ThanhToanParams' to pass parameters into this method.
        /// </summary>
        public void RecordedMethod1_ThanhToan()
        {
            #region Variable Declarations
            WinComboBox uICboTenLoaiComboBox = this.UIBánhàngWindow.UICboTenLoaiWindow.UICboTenLoaiComboBox;
            WinComboBox uITênthuốcComboBox = this.UIBánhàngWindow.UICboTenThuocWindow.UITênthuốcComboBox;
            WinButton uIItemButton = this.UIBánhàngWindow.UIItemWindow.UIItemButton;
            WinEdit uINumericUpDownEdit = this.UIBánhàngWindow.UINumericUpDownSpinner.UINumericUpDownEdit;
            WinButton uIThêmButton = this.UIBánhàngWindow.UIThêmWindow.UIThêmButton;
            WinControl uIItemDialog = this.UIItemWindow.UIItemWindow1.UIItemDialog;
            WinButton uIOKButton = this.UIOKWindow.UIOKButton;
            WinGroup uIThôngtinGroup = this.UIBánhàngWindow.UIThôngtinWindow.UIThôngtinGroup;
            WinEdit uITxtTienKhachDuaEdit = this.UIBánhàngWindow.UITxtTienKhachDuaWindow.UITxtTienKhachDuaEdit;
            WinEdit uITxtTienThuaEdit = this.UIBánhàngWindow.UITxtTienThuaWindow.UITxtTienThuaEdit;
            WinButton uIThanhtoánButton = this.UIBánhàngWindow.UIThanhtoánWindow.UIThanhtoánButton;
            #endregion

            // Last mouse action was not recorded.

            // Select 'THUỐC SỔ MŨI' in 'cboTenLoai' combo box
            uICboTenLoaiComboBox.SelectedItem = this.RecordedMethod1_ThanhToanParams.UICboTenLoaiComboBoxSelectedItem;

            // Select 'THUỐC SỔ MŨI Hadocolcen ' in 'Tên thuốc' combo box
            uITênthuốcComboBox.SelectedItem = this.RecordedMethod1_ThanhToanParams.UITênthuốcComboBoxSelectedItem;

            // Click '+' button
            Mouse.Click(uIItemButton, new Point(9, 13));

            // Select 'THUỐC CHỐNG ỐI' in 'cboTenLoai' combo box
            uICboTenLoaiComboBox.SelectedItem = this.RecordedMethod1_ThanhToanParams.UICboTenLoaiComboBoxSelectedItem1;

            // Select 'THUỐC CHỐNG ÓI Bestrip' in 'Tên thuốc' combo box
            uITênthuốcComboBox.SelectedItem = this.RecordedMethod1_ThanhToanParams.UITênthuốcComboBoxSelectedItem1;

            // Double-Click 'NumericUpDown' text box
            Mouse.DoubleClick(uINumericUpDownEdit, new Point(10, 6));

            // Type '5' in 'NumericUpDown' text box
            Keyboard.SendKeys(uINumericUpDownEdit, this.RecordedMethod1_ThanhToanParams.UINumericUpDownEditSendKeys, ModifierKeys.None);

            // Click 'Thêm' button
            Mouse.Click(uIThêmButton, new Point(30, 20));

            // Click Dialog
            Mouse.Click(uIItemDialog, new Point(91, 91));

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(45, 8));

            // Double-Click 'Thông tin' group
            Mouse.DoubleClick(uIThôngtinGroup, new Point(778, 82));

            // Type '500000' in 'txtTienKhachDua' text box
            uITxtTienKhachDuaEdit.Text = this.RecordedMethod1_ThanhToanParams.UITxtTienKhachDuaEditText;

            // Click 'txtTienThua' text box
            Mouse.Click(uITxtTienThuaEdit, new Point(60, 8));

            // Click 'Thanh toán' button
            Mouse.Click(uIThanhtoánButton, new Point(43, 17));

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(48, 15));
        }
        
        /// <summary>
        /// RecordedMethod1_ThanhToanTC - Use 'RecordedMethod1_ThanhToanTCParams' to pass parameters into this method.
        /// </summary>
        public void RecordedMethod1_ThanhToanTC()
        {
            #region Variable Declarations
            WinButton uIItemButton = this.UIBánhàngWindow.UIItemWindow.UIItemButton;
            WinComboBox uICboTenLoaiComboBox = this.UIBánhàngWindow.UICboTenLoaiWindow.UICboTenLoaiComboBox;
            WinEdit uIItemEdit = this.UIBánhàngWindow.UIItemWindow11.UIItemEdit;
            WinComboBox uITênthuốcComboBox = this.UIBánhàngWindow.UICboTenThuocWindow.UITênthuốcComboBox;
            WinEdit uINumericUpDownEdit = this.UIBánhàngWindow.UINumericUpDownSpinner.UINumericUpDownEdit;
            WinButton uIThêmButton = this.UIBánhàngWindow.UIThêmWindow.UIThêmButton;
            WinButton uIOKButton = this.UIOKWindow.UIOKButton;
            WinEdit uITxtTienKhachDuaEdit = this.UIBánhàngWindow.UITxtTienKhachDuaWindow.UITxtTienKhachDuaEdit;
            WinEdit uITxtTienThuaEdit = this.UIBánhàngWindow.UITxtTienThuaWindow.UITxtTienThuaEdit;
            WinButton uIThanhtoánButton = this.UIBánhàngWindow.UIThanhtoánWindow.UIThanhtoánButton;
            #endregion

            // Click '+' button
            Mouse.Click(uIItemButton, new Point(15, 8));

            // Select 'THUỐC TRỊ  NHỨC ĐẦU' in 'cboTenLoai' combo box
            uICboTenLoaiComboBox.SelectedItem = this.RecordedMethod1_ThanhToanTCParams.UICboTenLoaiComboBoxSelectedItem;

            // Click text box
            Mouse.Click(uIItemEdit, new Point(59, 14));

            // Select 'THUỐC NHỨC ĐẦU PARADOL' in 'Tên thuốc' combo box
            uITênthuốcComboBox.SelectedItem = this.RecordedMethod1_ThanhToanTCParams.UITênthuốcComboBoxSelectedItem;

            // Double-Click 'NumericUpDown' text box
            Mouse.DoubleClick(uINumericUpDownEdit, new Point(5, 5));

            // Type '5' in 'NumericUpDown' text box
            Keyboard.SendKeys(uINumericUpDownEdit, this.RecordedMethod1_ThanhToanTCParams.UINumericUpDownEditSendKeys, ModifierKeys.None);

            // Click 'Thêm' button
            Mouse.Click(uIThêmButton, new Point(25, 15));

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(28, 12));

            // Type '55555' in 'txtTienKhachDua' text box
            uITxtTienKhachDuaEdit.Text = this.RecordedMethod1_ThanhToanTCParams.UITxtTienKhachDuaEditText;

            // Click 'txtTienThua' text box
            Mouse.Click(uITxtTienThuaEdit, new Point(93, 11));

            // Click 'Thanh toán' button
            Mouse.Click(uIThanhtoánButton, new Point(17, 14));

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(42, 11));
        }
        
        /// <summary>
        /// AssertMethod1_ThemThanhCong - Use 'AssertMethod1_ThemThanhCongExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethod1_ThemThanhCong()
        {
            #region Variable Declarations
            WinText uIThêmThànhcôngText = this.UIThêmThànhcôngWindow.UIThêmThànhcôngText;
            #endregion

            // Verify that the 'ControlType' property of 'Thêm Thành công' label equals 'Text'
            Assert.AreEqual(this.AssertMethod1_ThemThanhCongExpectedValues.UIThêmThànhcôngTextControlType, uIThêmThànhcôngText.Name);
        }
        
        /// <summary>
        /// AssertMethod1_ThemLoi - Use 'AssertMethod1_ThemLoiExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethod1_ThemLoi()
        {
            #region Variable Declarations
            WinText uIThêmkhôngthànhcôngVuText = this.UIThêmkhôngthànhcôngVuWindow.UIThêmkhôngthànhcôngVuText;
            #endregion

            // Verify that the 'ControlType' property of 'Thêm không thành công! Vui lòng kiểm tra lại nhập ...' label equals 'Text'
            Assert.AreEqual(this.AssertMethod1_ThemLoiExpectedValues.UIThêmkhôngthànhcôngVuTextControlType, uIThêmkhôngthànhcôngVuText.Name);
        }
        
        /// <summary>
        /// AssertMethod1_SuaThanhCong - Use 'AssertMethod1_SuaThanhCongExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethod1_SuaThanhCong()
        {
            #region Variable Declarations
            WinText uISửaThànhcôngText = this.UISửaThànhcôngWindow.UISửaThànhcôngText;
            #endregion

            // Verify that the 'ControlType' property of 'Sửa Thành công' label equals 'Text'
            Assert.AreEqual(this.AssertMethod1_SuaThanhCongExpectedValues.UISửaThànhcôngTextControlType, uISửaThànhcôngText.Name);
        }
        
        /// <summary>
        /// AssertMethod1_SuaLoi - Use 'AssertMethod1_SuaLoiExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethod1_SuaLoi()
        {
            #region Variable Declarations
            WinText uIThêmkhôngthànhcôngVuText = this.UIThêmkhôngthànhcôngVuWindow.UIThêmkhôngthànhcôngVuText;
            #endregion

            // Verify that the 'ControlType' property of 'Thêm không thành công! Vui lòng kiểm tra lại nhập ...' label equals 'Text'
            Assert.AreEqual(this.AssertMethod1_SuaLoiExpectedValues.UIThêmkhôngthànhcôngVuTextControlType, uIThêmkhôngthànhcôngVuText.ControlType.ToString());
        }
        
        /// <summary>
        /// AssertMethod1_SuaKhongThanhCong - Use 'AssertMethod1_SuaKhongThanhCongExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethod1_SuaKhongThanhCong()
        {
            #region Variable Declarations
            WinText uISửakhôngthànhcôngVuiText = this.UISửakhôngthànhcôngVuiWindow.UISửakhôngthànhcôngVuiText;
            #endregion

            // Verify that the 'ControlType' property of 'Sửa không thành công! Vui lòng kiểm tra lại nhập l...' label equals 'Text'
            Assert.AreEqual(this.AssertMethod1_SuaKhongThanhCongExpectedValues.UISửakhôngthànhcôngVuiTextControlType, uISửakhôngthànhcôngVuiText.Name);
        }
        
        #region Properties
        public virtual RecordedMethod_ThemParams RecordedMethod_ThemParams
        {
            get
            {
                if ((this.mRecordedMethod_ThemParams == null))
                {
                    this.mRecordedMethod_ThemParams = new RecordedMethod_ThemParams();
                }
                return this.mRecordedMethod_ThemParams;
            }
        }
        
        public virtual AssertMethod_TienThuaExpectedValues AssertMethod_TienThuaExpectedValues
        {
            get
            {
                if ((this.mAssertMethod_TienThuaExpectedValues == null))
                {
                    this.mAssertMethod_TienThuaExpectedValues = new AssertMethod_TienThuaExpectedValues();
                }
                return this.mAssertMethod_TienThuaExpectedValues;
            }
        }
        
        public virtual AssertMethod_ThanhToanThanhCongExpectedValues AssertMethod_ThanhToanThanhCongExpectedValues
        {
            get
            {
                if ((this.mAssertMethod_ThanhToanThanhCongExpectedValues == null))
                {
                    this.mAssertMethod_ThanhToanThanhCongExpectedValues = new AssertMethod_ThanhToanThanhCongExpectedValues();
                }
                return this.mAssertMethod_ThanhToanThanhCongExpectedValues;
            }
        }
        
        public virtual RecordedMethod_ThanhToanParams RecordedMethod_ThanhToanParams
        {
            get
            {
                if ((this.mRecordedMethod_ThanhToanParams == null))
                {
                    this.mRecordedMethod_ThanhToanParams = new RecordedMethod_ThanhToanParams();
                }
                return this.mRecordedMethod_ThanhToanParams;
            }
        }
        
        public virtual RecordedMethod_ThanhToanTCParams RecordedMethod_ThanhToanTCParams
        {
            get
            {
                if ((this.mRecordedMethod_ThanhToanTCParams == null))
                {
                    this.mRecordedMethod_ThanhToanTCParams = new RecordedMethod_ThanhToanTCParams();
                }
                return this.mRecordedMethod_ThanhToanTCParams;
            }
        }
        
        public virtual RecordedMethod_ThanhToanHDParams RecordedMethod_ThanhToanHDParams
        {
            get
            {
                if ((this.mRecordedMethod_ThanhToanHDParams == null))
                {
                    this.mRecordedMethod_ThanhToanHDParams = new RecordedMethod_ThanhToanHDParams();
                }
                return this.mRecordedMethod_ThanhToanHDParams;
            }
        }
        
        public virtual AssertMethod_ThemThanhCongExpectedValues AssertMethod_ThemThanhCongExpectedValues
        {
            get
            {
                if ((this.mAssertMethod_ThemThanhCongExpectedValues == null))
                {
                    this.mAssertMethod_ThemThanhCongExpectedValues = new AssertMethod_ThemThanhCongExpectedValues();
                }
                return this.mAssertMethod_ThemThanhCongExpectedValues;
            }
        }
        
        public virtual AssertMethod_KQThemExpectedValues AssertMethod_KQThemExpectedValues
        {
            get
            {
                if ((this.mAssertMethod_KQThemExpectedValues == null))
                {
                    this.mAssertMethod_KQThemExpectedValues = new AssertMethod_KQThemExpectedValues();
                }
                return this.mAssertMethod_KQThemExpectedValues;
            }
        }
        
        public virtual RecordedMethod_ChucNangThemParams RecordedMethod_ChucNangThemParams
        {
            get
            {
                if ((this.mRecordedMethod_ChucNangThemParams == null))
                {
                    this.mRecordedMethod_ChucNangThemParams = new RecordedMethod_ChucNangThemParams();
                }
                return this.mRecordedMethod_ChucNangThemParams;
            }
        }
        
        public virtual AssertMethod_ChucNangThemExpectedValues AssertMethod_ChucNangThemExpectedValues
        {
            get
            {
                if ((this.mAssertMethod_ChucNangThemExpectedValues == null))
                {
                    this.mAssertMethod_ChucNangThemExpectedValues = new AssertMethod_ChucNangThemExpectedValues();
                }
                return this.mAssertMethod_ChucNangThemExpectedValues;
            }
        }
        
        public virtual RecordedMethod_ThemThanhCongParams RecordedMethod_ThemThanhCongParams
        {
            get
            {
                if ((this.mRecordedMethod_ThemThanhCongParams == null))
                {
                    this.mRecordedMethod_ThemThanhCongParams = new RecordedMethod_ThemThanhCongParams();
                }
                return this.mRecordedMethod_ThemThanhCongParams;
            }
        }
        
        public virtual TC_ThemParams TC_ThemParams
        {
            get
            {
                if ((this.mTC_ThemParams == null))
                {
                    this.mTC_ThemParams = new TC_ThemParams();
                }
                return this.mTC_ThemParams;
            }
        }
        
        public virtual AssertMethod_TCThemExpectedValues AssertMethod_TCThemExpectedValues
        {
            get
            {
                if ((this.mAssertMethod_TCThemExpectedValues == null))
                {
                    this.mAssertMethod_TCThemExpectedValues = new AssertMethod_TCThemExpectedValues();
                }
                return this.mAssertMethod_TCThemExpectedValues;
            }
        }
        
        public virtual RecordedMethod_TCThemParams RecordedMethod_TCThemParams
        {
            get
            {
                if ((this.mRecordedMethod_TCThemParams == null))
                {
                    this.mRecordedMethod_TCThemParams = new RecordedMethod_TCThemParams();
                }
                return this.mRecordedMethod_TCThemParams;
            }
        }
        
        public virtual RecordedMethod_SuaParams RecordedMethod_SuaParams
        {
            get
            {
                if ((this.mRecordedMethod_SuaParams == null))
                {
                    this.mRecordedMethod_SuaParams = new RecordedMethod_SuaParams();
                }
                return this.mRecordedMethod_SuaParams;
            }
        }
        
        public virtual AssertMethod_SuaExpectedValues AssertMethod_SuaExpectedValues
        {
            get
            {
                if ((this.mAssertMethod_SuaExpectedValues == null))
                {
                    this.mAssertMethod_SuaExpectedValues = new AssertMethod_SuaExpectedValues();
                }
                return this.mAssertMethod_SuaExpectedValues;
            }
        }
        
        public virtual RecordedMethod1_ThanhToanParams RecordedMethod1_ThanhToanParams
        {
            get
            {
                if ((this.mRecordedMethod1_ThanhToanParams == null))
                {
                    this.mRecordedMethod1_ThanhToanParams = new RecordedMethod1_ThanhToanParams();
                }
                return this.mRecordedMethod1_ThanhToanParams;
            }
        }
        
        public virtual RecordedMethod1_ThanhToanTCParams RecordedMethod1_ThanhToanTCParams
        {
            get
            {
                if ((this.mRecordedMethod1_ThanhToanTCParams == null))
                {
                    this.mRecordedMethod1_ThanhToanTCParams = new RecordedMethod1_ThanhToanTCParams();
                }
                return this.mRecordedMethod1_ThanhToanTCParams;
            }
        }
        
        public virtual AssertMethod1_ThemThanhCongExpectedValues AssertMethod1_ThemThanhCongExpectedValues
        {
            get
            {
                if ((this.mAssertMethod1_ThemThanhCongExpectedValues == null))
                {
                    this.mAssertMethod1_ThemThanhCongExpectedValues = new AssertMethod1_ThemThanhCongExpectedValues();
                }
                return this.mAssertMethod1_ThemThanhCongExpectedValues;
            }
        }
        
        public virtual AssertMethod1_ThemLoiExpectedValues AssertMethod1_ThemLoiExpectedValues
        {
            get
            {
                if ((this.mAssertMethod1_ThemLoiExpectedValues == null))
                {
                    this.mAssertMethod1_ThemLoiExpectedValues = new AssertMethod1_ThemLoiExpectedValues();
                }
                return this.mAssertMethod1_ThemLoiExpectedValues;
            }
        }
        
        public virtual AssertMethod1_SuaThanhCongExpectedValues AssertMethod1_SuaThanhCongExpectedValues
        {
            get
            {
                if ((this.mAssertMethod1_SuaThanhCongExpectedValues == null))
                {
                    this.mAssertMethod1_SuaThanhCongExpectedValues = new AssertMethod1_SuaThanhCongExpectedValues();
                }
                return this.mAssertMethod1_SuaThanhCongExpectedValues;
            }
        }
        
        public virtual AssertMethod1_SuaLoiExpectedValues AssertMethod1_SuaLoiExpectedValues
        {
            get
            {
                if ((this.mAssertMethod1_SuaLoiExpectedValues == null))
                {
                    this.mAssertMethod1_SuaLoiExpectedValues = new AssertMethod1_SuaLoiExpectedValues();
                }
                return this.mAssertMethod1_SuaLoiExpectedValues;
            }
        }
        
        public virtual AssertMethod1_SuaKhongThanhCongExpectedValues AssertMethod1_SuaKhongThanhCongExpectedValues
        {
            get
            {
                if ((this.mAssertMethod1_SuaKhongThanhCongExpectedValues == null))
                {
                    this.mAssertMethod1_SuaKhongThanhCongExpectedValues = new AssertMethod1_SuaKhongThanhCongExpectedValues();
                }
                return this.mAssertMethod1_SuaKhongThanhCongExpectedValues;
            }
        }
        
        public UIBánhàngWindow UIBánhàngWindow
        {
            get
            {
                if ((this.mUIBánhàngWindow == null))
                {
                    this.mUIBánhàngWindow = new UIBánhàngWindow();
                }
                return this.mUIBánhàngWindow;
            }
        }
        
        public UIOKWindow UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow();
                }
                return this.mUIOKWindow;
            }
        }
        
        public UIThanhtoánthànhcôngWindow UIThanhtoánthànhcôngWindow
        {
            get
            {
                if ((this.mUIThanhtoánthànhcôngWindow == null))
                {
                    this.mUIThanhtoánthànhcôngWindow = new UIThanhtoánthànhcôngWindow();
                }
                return this.mUIThanhtoánthànhcôngWindow;
            }
        }
        
        public UILINEWindow UILINEWindow
        {
            get
            {
                if ((this.mUILINEWindow == null))
                {
                    this.mUILINEWindow = new UILINEWindow();
                }
                return this.mUILINEWindow;
            }
        }
        
        public UIThêmThànhcôngWindow UIThêmThànhcôngWindow
        {
            get
            {
                if ((this.mUIThêmThànhcôngWindow == null))
                {
                    this.mUIThêmThànhcôngWindow = new UIThêmThànhcôngWindow();
                }
                return this.mUIThêmThànhcôngWindow;
            }
        }
        
        public UIItemWindow2 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow2();
                }
                return this.mUIItemWindow;
            }
        }
        
        public UISửaThànhcôngWindow UISửaThànhcôngWindow
        {
            get
            {
                if ((this.mUISửaThànhcôngWindow == null))
                {
                    this.mUISửaThànhcôngWindow = new UISửaThànhcôngWindow();
                }
                return this.mUISửaThànhcôngWindow;
            }
        }
        
        public UIThêmkhôngthànhcôngVuWindow UIThêmkhôngthànhcôngVuWindow
        {
            get
            {
                if ((this.mUIThêmkhôngthànhcôngVuWindow == null))
                {
                    this.mUIThêmkhôngthànhcôngVuWindow = new UIThêmkhôngthànhcôngVuWindow();
                }
                return this.mUIThêmkhôngthànhcôngVuWindow;
            }
        }
        
        public UISửakhôngthànhcôngVuiWindow UISửakhôngthànhcôngVuiWindow
        {
            get
            {
                if ((this.mUISửakhôngthànhcôngVuiWindow == null))
                {
                    this.mUISửakhôngthànhcôngVuiWindow = new UISửakhôngthànhcôngVuiWindow();
                }
                return this.mUISửakhôngthànhcôngVuiWindow;
            }
        }
        #endregion
        
        #region Fields
        private RecordedMethod_ThemParams mRecordedMethod_ThemParams;
        
        private AssertMethod_TienThuaExpectedValues mAssertMethod_TienThuaExpectedValues;
        
        private AssertMethod_ThanhToanThanhCongExpectedValues mAssertMethod_ThanhToanThanhCongExpectedValues;
        
        private RecordedMethod_ThanhToanParams mRecordedMethod_ThanhToanParams;
        
        private RecordedMethod_ThanhToanTCParams mRecordedMethod_ThanhToanTCParams;
        
        private RecordedMethod_ThanhToanHDParams mRecordedMethod_ThanhToanHDParams;
        
        private AssertMethod_ThemThanhCongExpectedValues mAssertMethod_ThemThanhCongExpectedValues;
        
        private AssertMethod_KQThemExpectedValues mAssertMethod_KQThemExpectedValues;
        
        private RecordedMethod_ChucNangThemParams mRecordedMethod_ChucNangThemParams;
        
        private AssertMethod_ChucNangThemExpectedValues mAssertMethod_ChucNangThemExpectedValues;
        
        private RecordedMethod_ThemThanhCongParams mRecordedMethod_ThemThanhCongParams;
        
        private TC_ThemParams mTC_ThemParams;
        
        private AssertMethod_TCThemExpectedValues mAssertMethod_TCThemExpectedValues;
        
        private RecordedMethod_TCThemParams mRecordedMethod_TCThemParams;
        
        private RecordedMethod_SuaParams mRecordedMethod_SuaParams;
        
        private AssertMethod_SuaExpectedValues mAssertMethod_SuaExpectedValues;
        
        private RecordedMethod1_ThanhToanParams mRecordedMethod1_ThanhToanParams;
        
        private RecordedMethod1_ThanhToanTCParams mRecordedMethod1_ThanhToanTCParams;
        
        private AssertMethod1_ThemThanhCongExpectedValues mAssertMethod1_ThemThanhCongExpectedValues;
        
        private AssertMethod1_ThemLoiExpectedValues mAssertMethod1_ThemLoiExpectedValues;
        
        private AssertMethod1_SuaThanhCongExpectedValues mAssertMethod1_SuaThanhCongExpectedValues;
        
        private AssertMethod1_SuaLoiExpectedValues mAssertMethod1_SuaLoiExpectedValues;
        
        private AssertMethod1_SuaKhongThanhCongExpectedValues mAssertMethod1_SuaKhongThanhCongExpectedValues;
        
        private UIBánhàngWindow mUIBánhàngWindow;
        
        private UIOKWindow mUIOKWindow;
        
        private UIThanhtoánthànhcôngWindow mUIThanhtoánthànhcôngWindow;
        
        private UILINEWindow mUILINEWindow;
        
        private UIThêmThànhcôngWindow mUIThêmThànhcôngWindow;
        
        private UIItemWindow2 mUIItemWindow;
        
        private UISửaThànhcôngWindow mUISửaThànhcôngWindow;
        
        private UIThêmkhôngthànhcôngVuWindow mUIThêmkhôngthànhcôngVuWindow;
        
        private UISửakhôngthànhcôngVuiWindow mUISửakhôngthànhcôngVuiWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod_Them'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class RecordedMethod_ThemParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'THUỐC CHỐNG ỐI' in 'cboTenLoai' combo box
        /// </summary>
        public string UICboTenLoaiComboBoxSelectedItem = "THUỐC CHỐNG ỐI";
        
        /// <summary>
        /// Select 'THUỐC CHỐNG ÓI Bestrip' in 'Tên thuốc' combo box
        /// </summary>
        public string UITênthuốcComboBoxSelectedItem = "THUỐC CHỐNG ÓI Bestrip";
        
        /// <summary>
        /// Type '10' in 'NumericUpDown' text box
        /// </summary>
        public string UINumericUpDownEditSendKeys = "10";
        
        /// <summary>
        /// Type '950000' in 'txtTienKhachDua' text box
        /// </summary>
        public string UITxtTienKhachDuaEditText = "950000";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethod_TienThua'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class AssertMethod_TienThuaExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ControlType' property of 'txtTienThua' text box equals 'Edit'
        /// </summary>
        public string UITxtTienThuaEditControlType = "Edit";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethod_ThanhToanThanhCong'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class AssertMethod_ThanhToanThanhCongExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ControlType' property of 'Thanh toán thành công!' label equals 'Text'
        /// </summary>
        public string UIThanhtoánthànhcôngTextControlType = "Text";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod_ThanhToan'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class RecordedMethod_ThanhToanParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'THUỐC TRỊ  NHỨC ĐẦU' in 'cboTenLoai' combo box
        /// </summary>
        public string UICboTenLoaiComboBoxSelectedItem = "THUỐC TRỊ  NHỨC ĐẦU";
        
        /// <summary>
        /// Select 'THUỐC NHỨC ĐẦU Decolgen ND' in 'Tên thuốc' combo box
        /// </summary>
        public string UITênthuốcComboBoxSelectedItem = "THUỐC NHỨC ĐẦU Decolgen ND";
        
        /// <summary>
        /// Type '8' in 'NumericUpDown' text box
        /// </summary>
        public string UINumericUpDownEditSendKeys = "8";
        
        /// <summary>
        /// Type '848000' in 'txtTienKhachDua' text box
        /// </summary>
        public string UITxtTienKhachDuaEditText = "848000";
        
        /// <summary>
        /// Select 'THUỐC CHỐNG ỐI' in 'cboTenLoai' combo box
        /// </summary>
        public string UICboTenLoaiComboBoxSelectedItem1 = "THUỐC CHỐNG ỐI";
        
        /// <summary>
        /// Select 'THUỐC CHỐNG ÓI Bestrip' in 'Tên thuốc' combo box
        /// </summary>
        public string UITênthuốcComboBoxSelectedItem1 = "THUỐC CHỐNG ÓI Bestrip";
        
        /// <summary>
        /// Type '2' in 'NumericUpDown' text box
        /// </summary>
        public string UINumericUpDownEditSendKeys1 = "2";
        
        /// <summary>
        /// Type '1140000' in 'txtTienKhachDua' text box
        /// </summary>
        public string UITxtTienKhachDuaEditText1 = "1140000";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod_ThanhToanTC'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class RecordedMethod_ThanhToanTCParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'THUỐC SỔ MŨI' in 'cboTenLoai' combo box
        /// </summary>
        public string UICboTenLoaiComboBoxSelectedItem = "THUỐC SỔ MŨI";
        
        /// <summary>
        /// Select 'THUỐC SỔ MŨI Coldacmin Flu' in 'Tên thuốc' combo box
        /// </summary>
        public string UITênthuốcComboBoxSelectedItem = "THUỐC SỔ MŨI Coldacmin Flu";
        
        /// <summary>
        /// Type '22{Back}' in 'NumericUpDown' text box
        /// </summary>
        public string UINumericUpDownEditSendKeys = "22{Back}";
        
        /// <summary>
        /// Type '36000' in 'txtTienKhachDua' text box
        /// </summary>
        public string UITxtTienKhachDuaEditText = "36000";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod_ThanhToanHD'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class RecordedMethod_ThanhToanHDParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'THUỐC TRỊ  NHỨC ĐẦU' in 'cboTenLoai' combo box
        /// </summary>
        public string UICboTenLoaiComboBoxSelectedItem = "THUỐC TRỊ  NHỨC ĐẦU";
        
        /// <summary>
        /// Select 'THUỐC NHỨC ĐẦU PARADOL' in 'Tên thuốc' combo box
        /// </summary>
        public string UITênthuốcComboBoxSelectedItem = "THUỐC NHỨC ĐẦU PARADOL";
        
        /// <summary>
        /// Type '4' in 'NumericUpDown' text box
        /// </summary>
        public string UINumericUpDownEditSendKeys = "4";
        
        /// <summary>
        /// Type '4000' in 'txtTienKhachDua' text box
        /// </summary>
        public string UITxtTienKhachDuaEditText = "4000";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethod_ThemThanhCong'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class AssertMethod_ThemThanhCongExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ControlType' property of 'Thêm Thành công' label equals 'Text'
        /// </summary>
        public string UIThêmThànhcôngTextControlType = "Text";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethod_KQThem'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class AssertMethod_KQThemExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ControlType' property of 'Thêm Thành công' label equals 'Text'
        /// </summary>
        public string UIThêmThànhcôngTextControlType = "Text";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod_ChucNangThem'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class RecordedMethod_ChucNangThemParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'THUỐC TRỊ  NHỨC ĐẦU' in 'cboTenLoai' combo box
        /// </summary>
        public string UICboTenLoaiComboBoxSelectedItem = "THUỐC TRỊ  NHỨC ĐẦU";
        
        /// <summary>
        /// Select 'THUỐC NHỨC ĐẦU Decolgen ND' in 'Tên thuốc' combo box
        /// </summary>
        public string UITênthuốcComboBoxSelectedItem = "THUỐC NHỨC ĐẦU Decolgen ND";
        
        /// <summary>
        /// Type '4' in 'NumericUpDown' text box
        /// </summary>
        public string UINumericUpDownEditSendKeys = "4";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethod_ChucNangThem'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class AssertMethod_ChucNangThemExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ControlType' property of Dialog equals 'Dialog'
        /// </summary>
        public string UIItemDialogControlType = "Dialog";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod_ThemThanhCong'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class RecordedMethod_ThemThanhCongParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'THUỐC SỔ MŨI' in 'cboTenLoai' combo box
        /// </summary>
        public string UICboTenLoaiComboBoxSelectedItem = "THUỐC SỔ MŨI";
        
        /// <summary>
        /// Select 'THUỐC SỔ MŨI Coldacmin Flu' in 'Tên thuốc' combo box
        /// </summary>
        public string UITênthuốcComboBoxSelectedItem = "THUỐC SỔ MŨI Coldacmin Flu";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'TC_Them'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class TC_ThemParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'THUỐC SỐT' in 'cboTenLoai' combo box
        /// </summary>
        public string UICboTenLoaiComboBoxSelectedItem = "THUỐC SỐT";
        
        /// <summary>
        /// Select 'THUỐC SỐT Paracetamol' in 'Tên thuốc' combo box
        /// </summary>
        public string UITênthuốcComboBoxSelectedItem = "THUỐC SỐT Paracetamol";
        
        /// <summary>
        /// Type '4' in 'NumericUpDown' text box
        /// </summary>
        public string UINumericUpDownEditSendKeys = "4";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethod_TCThem'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class AssertMethod_TCThemExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ControlType' property of 'Thêm Thành công' label equals 'Text'
        /// </summary>
        public string UIThêmThànhcôngTextControlType = "Text";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod_TCThem'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class RecordedMethod_TCThemParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'THUỐC SỐT' in 'cboTenLoai' combo box
        /// </summary>
        public string UICboTenLoaiComboBoxSelectedItem = "THUỐC SỐT";
        
        /// <summary>
        /// Select 'Thuốc hạ sốt Tatanol 500mg' in 'Tên thuốc' combo box
        /// </summary>
        public string UITênthuốcComboBoxSelectedItem = "Thuốc hạ sốt Tatanol 500mg";
        
        /// <summary>
        /// Type '5' in 'NumericUpDown' text box
        /// </summary>
        public string UINumericUpDownEditSendKeys = "5";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod_Sua'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class RecordedMethod_SuaParams
    {
        
        #region Fields
        /// <summary>
        /// Type '10' in 'NumericUpDown' text box
        /// </summary>
        public string UINumericUpDownEditSendKeys = "10";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethod_Sua'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class AssertMethod_SuaExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ControlType' property of 'Sửa Thành công' label equals 'Text'
        /// </summary>
        public string UISửaThànhcôngTextControlType = "Text";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod1_ThanhToan'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class RecordedMethod1_ThanhToanParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'THUỐC SỔ MŨI' in 'cboTenLoai' combo box
        /// </summary>
        public string UICboTenLoaiComboBoxSelectedItem = "THUỐC SỔ MŨI";
        
        /// <summary>
        /// Select 'THUỐC SỔ MŨI Hadocolcen ' in 'Tên thuốc' combo box
        /// </summary>
        public string UITênthuốcComboBoxSelectedItem = "THUỐC SỔ MŨI Hadocolcen ";
        
        /// <summary>
        /// Select 'THUỐC CHỐNG ỐI' in 'cboTenLoai' combo box
        /// </summary>
        public string UICboTenLoaiComboBoxSelectedItem1 = "THUỐC CHỐNG ỐI";
        
        /// <summary>
        /// Select 'THUỐC CHỐNG ÓI Bestrip' in 'Tên thuốc' combo box
        /// </summary>
        public string UITênthuốcComboBoxSelectedItem1 = "THUỐC CHỐNG ÓI Bestrip";
        
        /// <summary>
        /// Type '5' in 'NumericUpDown' text box
        /// </summary>
        public string UINumericUpDownEditSendKeys = "5";
        
        /// <summary>
        /// Type '500000' in 'txtTienKhachDua' text box
        /// </summary>
        public string UITxtTienKhachDuaEditText = "500000";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod1_ThanhToanTC'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class RecordedMethod1_ThanhToanTCParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'THUỐC TRỊ  NHỨC ĐẦU' in 'cboTenLoai' combo box
        /// </summary>
        public string UICboTenLoaiComboBoxSelectedItem = "THUỐC TRỊ  NHỨC ĐẦU";
        
        /// <summary>
        /// Select 'THUỐC NHỨC ĐẦU PARADOL' in 'Tên thuốc' combo box
        /// </summary>
        public string UITênthuốcComboBoxSelectedItem = "THUỐC NHỨC ĐẦU PARADOL";
        
        /// <summary>
        /// Type '5' in 'NumericUpDown' text box
        /// </summary>
        public string UINumericUpDownEditSendKeys = "5";
        
        /// <summary>
        /// Type '55555' in 'txtTienKhachDua' text box
        /// </summary>
        public string UITxtTienKhachDuaEditText = "55555";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethod1_ThemThanhCong'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class AssertMethod1_ThemThanhCongExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ControlType' property of 'Thêm Thành công' label equals 'Text'
        /// </summary>
        public string UIThêmThànhcôngTextControlType = "Text";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethod1_ThemLoi'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class AssertMethod1_ThemLoiExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ControlType' property of 'Thêm không thành công! Vui lòng kiểm tra lại nhập ...' label equals 'Text'
        /// </summary>
        public string UIThêmkhôngthànhcôngVuTextControlType = "Text";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethod1_SuaThanhCong'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class AssertMethod1_SuaThanhCongExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ControlType' property of 'Sửa Thành công' label equals 'Text'
        /// </summary>
        public string UISửaThànhcôngTextControlType = "Text";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethod1_SuaLoi'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class AssertMethod1_SuaLoiExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ControlType' property of 'Thêm không thành công! Vui lòng kiểm tra lại nhập ...' label equals 'Text'
        /// </summary>
        public string UIThêmkhôngthànhcôngVuTextControlType = "Text";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethod1_SuaKhongThanhCong'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class AssertMethod1_SuaKhongThanhCongExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ControlType' property of 'Sửa không thành công! Vui lòng kiểm tra lại nhập l...' label equals 'Text'
        /// </summary>
        public string UISửakhôngthànhcôngVuiTextControlType = "Text";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIBánhàngWindow : WinWindow
    {
        
        public UIBánhàngWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Bán hàng";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Bán hàng");
            #endregion
        }
        
        #region Properties
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UICboTenLoaiWindow UICboTenLoaiWindow
        {
            get
            {
                if ((this.mUICboTenLoaiWindow == null))
                {
                    this.mUICboTenLoaiWindow = new UICboTenLoaiWindow(this);
                }
                return this.mUICboTenLoaiWindow;
            }
        }
        
        public UICboTenThuocWindow UICboTenThuocWindow
        {
            get
            {
                if ((this.mUICboTenThuocWindow == null))
                {
                    this.mUICboTenThuocWindow = new UICboTenThuocWindow(this);
                }
                return this.mUICboTenThuocWindow;
            }
        }
        
        public UINumericUpDownSpinner UINumericUpDownSpinner
        {
            get
            {
                if ((this.mUINumericUpDownSpinner == null))
                {
                    this.mUINumericUpDownSpinner = new UINumericUpDownSpinner(this);
                }
                return this.mUINumericUpDownSpinner;
            }
        }
        
        public UIThôngtinWindow UIThôngtinWindow
        {
            get
            {
                if ((this.mUIThôngtinWindow == null))
                {
                    this.mUIThôngtinWindow = new UIThôngtinWindow(this);
                }
                return this.mUIThôngtinWindow;
            }
        }
        
        public UIThêmWindow UIThêmWindow
        {
            get
            {
                if ((this.mUIThêmWindow == null))
                {
                    this.mUIThêmWindow = new UIThêmWindow(this);
                }
                return this.mUIThêmWindow;
            }
        }
        
        public UITxtTienKhachDuaWindow UITxtTienKhachDuaWindow
        {
            get
            {
                if ((this.mUITxtTienKhachDuaWindow == null))
                {
                    this.mUITxtTienKhachDuaWindow = new UITxtTienKhachDuaWindow(this);
                }
                return this.mUITxtTienKhachDuaWindow;
            }
        }
        
        public UITxtTienThuaWindow UITxtTienThuaWindow
        {
            get
            {
                if ((this.mUITxtTienThuaWindow == null))
                {
                    this.mUITxtTienThuaWindow = new UITxtTienThuaWindow(this);
                }
                return this.mUITxtTienThuaWindow;
            }
        }
        
        public UIThôngtinGroup UIThôngtinGroup
        {
            get
            {
                if ((this.mUIThôngtinGroup == null))
                {
                    this.mUIThôngtinGroup = new UIThôngtinGroup(this);
                }
                return this.mUIThôngtinGroup;
            }
        }
        
        public UIThanhtoánWindow UIThanhtoánWindow
        {
            get
            {
                if ((this.mUIThanhtoánWindow == null))
                {
                    this.mUIThanhtoánWindow = new UIThanhtoánWindow(this);
                }
                return this.mUIThanhtoánWindow;
            }
        }
        
        public UITxtGiaWindow UITxtGiaWindow
        {
            get
            {
                if ((this.mUITxtGiaWindow == null))
                {
                    this.mUITxtGiaWindow = new UITxtGiaWindow(this);
                }
                return this.mUITxtGiaWindow;
            }
        }
        
        public UITxtTTWindow UITxtTTWindow
        {
            get
            {
                if ((this.mUITxtTTWindow == null))
                {
                    this.mUITxtTTWindow = new UITxtTTWindow(this);
                }
                return this.mUITxtTTWindow;
            }
        }
        
        public UIDgvBHWindow UIDgvBHWindow
        {
            get
            {
                if ((this.mUIDgvBHWindow == null))
                {
                    this.mUIDgvBHWindow = new UIDgvBHWindow(this);
                }
                return this.mUIDgvBHWindow;
            }
        }
        
        public UIItemWindow1 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow1(this);
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIItemWindow11 UIItemWindow11
        {
            get
            {
                if ((this.mUIItemWindow11 == null))
                {
                    this.mUIItemWindow11 = new UIItemWindow11(this);
                }
                return this.mUIItemWindow11;
            }
        }
        
        public UIXóaWindow UIXóaWindow
        {
            get
            {
                if ((this.mUIXóaWindow == null))
                {
                    this.mUIXóaWindow = new UIXóaWindow(this);
                }
                return this.mUIXóaWindow;
            }
        }
        
        public UISpinnerSpinner UISpinnerSpinner
        {
            get
            {
                if ((this.mUISpinnerSpinner == null))
                {
                    this.mUISpinnerSpinner = new UISpinnerSpinner(this);
                }
                return this.mUISpinnerSpinner;
            }
        }
        
        public UISửaWindow UISửaWindow
        {
            get
            {
                if ((this.mUISửaWindow == null))
                {
                    this.mUISửaWindow = new UISửaWindow(this);
                }
                return this.mUISửaWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow mUIItemWindow;
        
        private UICboTenLoaiWindow mUICboTenLoaiWindow;
        
        private UICboTenThuocWindow mUICboTenThuocWindow;
        
        private UINumericUpDownSpinner mUINumericUpDownSpinner;
        
        private UIThôngtinWindow mUIThôngtinWindow;
        
        private UIThêmWindow mUIThêmWindow;
        
        private UITxtTienKhachDuaWindow mUITxtTienKhachDuaWindow;
        
        private UITxtTienThuaWindow mUITxtTienThuaWindow;
        
        private UIThôngtinGroup mUIThôngtinGroup;
        
        private UIThanhtoánWindow mUIThanhtoánWindow;
        
        private UITxtGiaWindow mUITxtGiaWindow;
        
        private UITxtTTWindow mUITxtTTWindow;
        
        private UIDgvBHWindow mUIDgvBHWindow;
        
        private UIItemWindow1 mUIItemWindow1;
        
        private UIItemWindow11 mUIItemWindow11;
        
        private UIXóaWindow mUIXóaWindow;
        
        private UISpinnerSpinner mUISpinnerSpinner;
        
        private UISửaWindow mUISửaWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnTaoHD";
            this.WindowTitles.Add("Bán hàng");
            #endregion
        }
        
        #region Properties
        public WinButton UIItemButton
        {
            get
            {
                if ((this.mUIItemButton == null))
                {
                    this.mUIItemButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIItemButton.SearchProperties[WinButton.PropertyNames.Name] = "+";
                    this.mUIItemButton.WindowTitles.Add("Bán hàng");
                    #endregion
                }
                return this.mUIItemButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIItemButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UICboTenLoaiWindow : WinWindow
    {
        
        public UICboTenLoaiWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cboTenLoai";
            this.WindowTitles.Add("Bán hàng");
            #endregion
        }
        
        #region Properties
        public WinComboBox UICboTenLoaiComboBox
        {
            get
            {
                if ((this.mUICboTenLoaiComboBox == null))
                {
                    this.mUICboTenLoaiComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUICboTenLoaiComboBox.WindowTitles.Add("Bán hàng");
                    #endregion
                }
                return this.mUICboTenLoaiComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUICboTenLoaiComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UICboTenThuocWindow : WinWindow
    {
        
        public UICboTenThuocWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cboTenThuoc";
            this.WindowTitles.Add("Bán hàng");
            #endregion
        }
        
        #region Properties
        public WinComboBox UITênthuốcComboBox
        {
            get
            {
                if ((this.mUITênthuốcComboBox == null))
                {
                    this.mUITênthuốcComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUITênthuốcComboBox.SearchProperties[WinComboBox.PropertyNames.Name] = "Tên thuốc";
                    this.mUITênthuốcComboBox.WindowTitles.Add("Bán hàng");
                    #endregion
                }
                return this.mUITênthuốcComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUITênthuốcComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UINumericUpDownSpinner : WinSpinner
    {
        
        public UINumericUpDownSpinner(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinSpinner.PropertyNames.Name] = "NumericUpDown";
            this.WindowTitles.Add("Bán hàng");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumericUpDownEdit
        {
            get
            {
                if ((this.mUINumericUpDownEdit == null))
                {
                    this.mUINumericUpDownEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumericUpDownEdit.SearchProperties[WinEdit.PropertyNames.Name] = "NumericUpDown";
                    this.mUINumericUpDownEdit.WindowTitles.Add("Bán hàng");
                    #endregion
                }
                return this.mUINumericUpDownEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumericUpDownEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIThôngtinWindow : WinWindow
    {
        
        public UIThôngtinWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "groupBox1";
            this.WindowTitles.Add("Bán hàng");
            #endregion
        }
        
        #region Properties
        public WinGroup UIThôngtinGroup
        {
            get
            {
                if ((this.mUIThôngtinGroup == null))
                {
                    this.mUIThôngtinGroup = new WinGroup(this);
                    #region Search Criteria
                    this.mUIThôngtinGroup.SearchProperties[WinControl.PropertyNames.Name] = "Thông tin";
                    this.mUIThôngtinGroup.WindowTitles.Add("Bán hàng");
                    #endregion
                }
                return this.mUIThôngtinGroup;
            }
        }
        #endregion
        
        #region Fields
        private WinGroup mUIThôngtinGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIThêmWindow : WinWindow
    {
        
        public UIThêmWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnThem";
            this.WindowTitles.Add("Bán hàng");
            #endregion
        }
        
        #region Properties
        public WinButton UIThêmButton
        {
            get
            {
                if ((this.mUIThêmButton == null))
                {
                    this.mUIThêmButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIThêmButton.SearchProperties[WinButton.PropertyNames.Name] = "Thêm";
                    this.mUIThêmButton.WindowTitles.Add("Bán hàng");
                    #endregion
                }
                return this.mUIThêmButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIThêmButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UITxtTienKhachDuaWindow : WinWindow
    {
        
        public UITxtTienKhachDuaWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtTienKhachDua";
            this.WindowTitles.Add("Bán hàng");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtTienKhachDuaEdit
        {
            get
            {
                if ((this.mUITxtTienKhachDuaEdit == null))
                {
                    this.mUITxtTienKhachDuaEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtTienKhachDuaEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Tiền mặt khách đưa";
                    this.mUITxtTienKhachDuaEdit.WindowTitles.Add("Bán hàng");
                    #endregion
                }
                return this.mUITxtTienKhachDuaEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtTienKhachDuaEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UITxtTienThuaWindow : WinWindow
    {
        
        public UITxtTienThuaWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtTienThua";
            this.WindowTitles.Add("Bán hàng");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtTienThuaEdit
        {
            get
            {
                if ((this.mUITxtTienThuaEdit == null))
                {
                    this.mUITxtTienThuaEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtTienThuaEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Tiền trả lại";
                    this.mUITxtTienThuaEdit.WindowTitles.Add("Bán hàng");
                    #endregion
                }
                return this.mUITxtTienThuaEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtTienThuaEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIThôngtinGroup : WinGroup
    {
        
        public UIThôngtinGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Thông tin";
            this.WindowTitles.Add("Bán hàng");
            #endregion
        }
        
        #region Properties
        public WinWindow UITxtTienKhachDuaWindow
        {
            get
            {
                if ((this.mUITxtTienKhachDuaWindow == null))
                {
                    this.mUITxtTienKhachDuaWindow = new WinWindow(this);
                    #region Search Criteria
                    this.mUITxtTienKhachDuaWindow.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Tiền mặt khách đưa";
                    this.mUITxtTienKhachDuaWindow.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
                    this.mUITxtTienKhachDuaWindow.WindowTitles.Add("Bán hàng");
                    #endregion
                }
                return this.mUITxtTienKhachDuaWindow;
            }
        }
        #endregion
        
        #region Fields
        private WinWindow mUITxtTienKhachDuaWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIThanhtoánWindow : WinWindow
    {
        
        public UIThanhtoánWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "button1";
            this.WindowTitles.Add("Bán hàng");
            #endregion
        }
        
        #region Properties
        public WinButton UIThanhtoánButton
        {
            get
            {
                if ((this.mUIThanhtoánButton == null))
                {
                    this.mUIThanhtoánButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIThanhtoánButton.SearchProperties[WinButton.PropertyNames.Name] = "Thanh toán";
                    this.mUIThanhtoánButton.WindowTitles.Add("Bán hàng");
                    #endregion
                }
                return this.mUIThanhtoánButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIThanhtoánButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UITxtGiaWindow : WinWindow
    {
        
        public UITxtGiaWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtGia";
            this.WindowTitles.Add("Bán hàng");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtGiaEdit
        {
            get
            {
                if ((this.mUITxtGiaEdit == null))
                {
                    this.mUITxtGiaEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtGiaEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Đơn giá";
                    this.mUITxtGiaEdit.WindowTitles.Add("Bán hàng");
                    #endregion
                }
                return this.mUITxtGiaEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtGiaEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UITxtTTWindow : WinWindow
    {
        
        public UITxtTTWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtTT";
            this.WindowTitles.Add("Bán hàng");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtTTEdit
        {
            get
            {
                if ((this.mUITxtTTEdit == null))
                {
                    this.mUITxtTTEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtTTEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Thành tiền";
                    this.mUITxtTTEdit.WindowTitles.Add("Bán hàng");
                    #endregion
                }
                return this.mUITxtTTEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtTTEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIDgvBHWindow : WinWindow
    {
        
        public UIDgvBHWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "dgvBH";
            this.WindowTitles.Add("Bán hàng");
            #endregion
        }
        
        #region Properties
        public UIDataGridViewTable UIDataGridViewTable
        {
            get
            {
                if ((this.mUIDataGridViewTable == null))
                {
                    this.mUIDataGridViewTable = new UIDataGridViewTable(this);
                }
                return this.mUIDataGridViewTable;
            }
        }
        #endregion
        
        #region Fields
        private UIDataGridViewTable mUIDataGridViewTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIDataGridViewTable : WinTable
    {
        
        public UIDataGridViewTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinTable.PropertyNames.Name] = "DataGridView";
            this.WindowTitles.Add("Bán hàng");
            #endregion
        }
        
        #region Properties
        public UIRow0Row UIRow0Row
        {
            get
            {
                if ((this.mUIRow0Row == null))
                {
                    this.mUIRow0Row = new UIRow0Row(this);
                }
                return this.mUIRow0Row;
            }
        }
        
        public UIRow0Row1 UIRow0Row1
        {
            get
            {
                if ((this.mUIRow0Row1 == null))
                {
                    this.mUIRow0Row1 = new UIRow0Row1(this);
                }
                return this.mUIRow0Row1;
            }
        }
        #endregion
        
        #region Fields
        private UIRow0Row mUIRow0Row;
        
        private UIRow0Row1 mUIRow0Row1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIRow0Row : WinRow
    {
        
        public UIRow0Row(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinRow.PropertyNames.Value] = "70;THUỐC SỔ MŨI;THUỐC SỔ MŨI Hadocolcen ;3;VĨ;12000;36000";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Bán hàng");
            #endregion
        }
        
        #region Properties
        public WinCell UITHUỐCSỔMŨIHadocolcenCell
        {
            get
            {
                if ((this.mUITHUỐCSỔMŨIHadocolcenCell == null))
                {
                    this.mUITHUỐCSỔMŨIHadocolcenCell = new WinCell(this);
                    #region Search Criteria
                    this.mUITHUỐCSỔMŨIHadocolcenCell.SearchProperties[WinCell.PropertyNames.Value] = "THUỐC SỔ MŨI Hadocolcen ";
                    this.mUITHUỐCSỔMŨIHadocolcenCell.WindowTitles.Add("Bán hàng");
                    #endregion
                }
                return this.mUITHUỐCSỔMŨIHadocolcenCell;
            }
        }
        #endregion
        
        #region Fields
        private WinCell mUITHUỐCSỔMŨIHadocolcenCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIRow0Row1 : WinRow
    {
        
        public UIRow0Row1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinRow.PropertyNames.Value, ";THUỐC SỐT;THUỐC SỐT MỸ;3;VIÊN;3000;9000", PropertyExpressionOperator.Contains));
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Bán hàng");
            #endregion
        }
        
        #region Properties
        public WinCell UITHUỐCSỐTMỸCell
        {
            get
            {
                if ((this.mUITHUỐCSỐTMỸCell == null))
                {
                    this.mUITHUỐCSỐTMỸCell = new WinCell(this);
                    #region Search Criteria
                    this.mUITHUỐCSỐTMỸCell.SearchProperties[WinCell.PropertyNames.Value] = "THUỐC SỐT MỸ";
                    this.mUITHUỐCSỐTMỸCell.WindowTitles.Add("Bán hàng");
                    #endregion
                }
                return this.mUITHUỐCSỐTMỸCell;
            }
        }
        #endregion
        
        #region Fields
        private WinCell mUITHUỐCSỐTMỸCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIItemWindow1 : WinWindow
    {
        
        public UIItemWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1001";
            this.WindowTitles.Add("Bán hàng");
            #endregion
        }
        
        #region Properties
        public WinEdit UITênthuốcEdit
        {
            get
            {
                if ((this.mUITênthuốcEdit == null))
                {
                    this.mUITênthuốcEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITênthuốcEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Tên thuốc";
                    this.mUITênthuốcEdit.WindowTitles.Add("Bán hàng");
                    #endregion
                }
                return this.mUITênthuốcEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITênthuốcEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIItemWindow11 : WinWindow
    {
        
        public UIItemWindow11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1001";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Bán hàng");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Bán hàng");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIXóaWindow : WinWindow
    {
        
        public UIXóaWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnXoa";
            this.WindowTitles.Add("Bán hàng");
            #endregion
        }
        
        #region Properties
        public WinButton UIXóaButton
        {
            get
            {
                if ((this.mUIXóaButton == null))
                {
                    this.mUIXóaButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIXóaButton.SearchProperties[WinButton.PropertyNames.Name] = "Xóa";
                    this.mUIXóaButton.WindowTitles.Add("Bán hàng");
                    #endregion
                }
                return this.mUIXóaButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIXóaButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UISpinnerSpinner : WinSpinner
    {
        
        public UISpinnerSpinner(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinSpinner.PropertyNames.Name] = "Spinner";
            this.WindowTitles.Add("Bán hàng");
            #endregion
        }
        
        #region Properties
        public WinButton UIUPButton
        {
            get
            {
                if ((this.mUIUPButton == null))
                {
                    this.mUIUPButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIUPButton.SearchProperties[WinButton.PropertyNames.Name] = "Up";
                    this.mUIUPButton.WindowTitles.Add("Bán hàng");
                    #endregion
                }
                return this.mUIUPButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIUPButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UISửaWindow : WinWindow
    {
        
        public UISửaWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnSua";
            this.WindowTitles.Add("Bán hàng");
            #endregion
        }
        
        #region Properties
        public WinButton UISửaButton
        {
            get
            {
                if ((this.mUISửaButton == null))
                {
                    this.mUISửaButton = new WinButton(this);
                    #region Search Criteria
                    this.mUISửaButton.SearchProperties[WinButton.PropertyNames.Name] = "Sửa";
                    this.mUISửaButton.WindowTitles.Add("Bán hàng");
                    #endregion
                }
                return this.mUISửaButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUISửaButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIOKWindow : WinWindow
    {
        
        public UIOKWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "OK";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Button";
            this.WindowTitles.Add("OK");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("OK");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIThanhtoánthànhcôngWindow : WinWindow
    {
        
        public UIThanhtoánthànhcôngWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Thanh toán thành công!";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Static";
            this.WindowTitles.Add("Thanh toán thành công!");
            #endregion
        }
        
        #region Properties
        public WinText UIThanhtoánthànhcôngText
        {
            get
            {
                if ((this.mUIThanhtoánthànhcôngText == null))
                {
                    this.mUIThanhtoánthànhcôngText = new WinText(this);
                    #region Search Criteria
                    this.mUIThanhtoánthànhcôngText.SearchProperties[WinText.PropertyNames.Name] = "Thanh toán thành công!";
                    this.mUIThanhtoánthànhcôngText.WindowTitles.Add("Thanh toán thành công!");
                    #endregion
                }
                return this.mUIThanhtoánthànhcôngText;
            }
        }
        #endregion
        
        #region Fields
        private WinText mUIThanhtoánthànhcôngText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UILINEWindow : WinWindow
    {
        
        public UILINEWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "LINE";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Qt5152QWindowToolTipSaveBits";
            this.WindowTitles.Add("LINE");
            #endregion
        }
        
        #region Properties
        public UILINEWindow1 UILINEWindow1
        {
            get
            {
                if ((this.mUILINEWindow1 == null))
                {
                    this.mUILINEWindow1 = new UILINEWindow1(this);
                }
                return this.mUILINEWindow1;
            }
        }
        #endregion
        
        #region Fields
        private UILINEWindow1 mUILINEWindow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UILINEWindow1 : WinWindow
    {
        
        public UILINEWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "LINE";
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("LINE");
            #endregion
        }
        
        #region Properties
        public WinGroup UILINEGroup
        {
            get
            {
                if ((this.mUILINEGroup == null))
                {
                    this.mUILINEGroup = new WinGroup(this);
                    #region Search Criteria
                    this.mUILINEGroup.WindowTitles.Add("LINE");
                    #endregion
                }
                return this.mUILINEGroup;
            }
        }
        #endregion
        
        #region Fields
        private WinGroup mUILINEGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIThêmThànhcôngWindow : WinWindow
    {
        
        public UIThêmThànhcôngWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Thêm Thành công";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Static";
            this.WindowTitles.Add("Thêm Thành công");
            #endregion
        }
        
        #region Properties
        public WinText UIThêmThànhcôngText
        {
            get
            {
                if ((this.mUIThêmThànhcôngText == null))
                {
                    this.mUIThêmThànhcôngText = new WinText(this);
                    #region Search Criteria
                    this.mUIThêmThànhcôngText.SearchProperties[WinText.PropertyNames.Name] = "Thêm Thành công";
                    this.mUIThêmThànhcôngText.WindowTitles.Add("Thêm Thành công");
                    #endregion
                }
                return this.mUIThêmThànhcôngText;
            }
        }
        #endregion
        
        #region Fields
        private WinText mUIThêmThànhcôngText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIItemWindow2 : WinWindow
    {
        
        public UIItemWindow2()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Desktop 1";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32769";
            #endregion
        }
        
        #region Properties
        public UIItemWindow12 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow12(this);
                }
                return this.mUIItemWindow1;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow12 mUIItemWindow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIItemWindow12 : WinWindow
    {
        
        public UIItemWindow12(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            #endregion
        }
        
        #region Properties
        public WinControl UIItemDialog
        {
            get
            {
                if ((this.mUIItemDialog == null))
                {
                    this.mUIItemDialog = new WinControl(this);
                    #region Search Criteria
                    this.mUIItemDialog.SearchProperties[UITestControl.PropertyNames.ControlType] = "Dialog";
                    #endregion
                }
                return this.mUIItemDialog;
            }
        }
        #endregion
        
        #region Fields
        private WinControl mUIItemDialog;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UISửaThànhcôngWindow : WinWindow
    {
        
        public UISửaThànhcôngWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Sửa Thành công";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Static";
            this.WindowTitles.Add("Sửa Thành công");
            #endregion
        }
        
        #region Properties
        public WinText UISửaThànhcôngText
        {
            get
            {
                if ((this.mUISửaThànhcôngText == null))
                {
                    this.mUISửaThànhcôngText = new WinText(this);
                    #region Search Criteria
                    this.mUISửaThànhcôngText.SearchProperties[WinText.PropertyNames.Name] = "Sửa Thành công";
                    this.mUISửaThànhcôngText.WindowTitles.Add("Sửa Thành công");
                    #endregion
                }
                return this.mUISửaThànhcôngText;
            }
        }
        #endregion
        
        #region Fields
        private WinText mUISửaThànhcôngText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIThêmkhôngthànhcôngVuWindow : WinWindow
    {
        
        public UIThêmkhôngthànhcôngVuWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Thêm không thành công! Vui lòng kiểm tra lại nhập liệu!";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Static";
            this.WindowTitles.Add("Thêm không thành công! Vui lòng kiểm tra lại nhập liệu!");
            #endregion
        }
        
        #region Properties
        public WinText UIThêmkhôngthànhcôngVuText
        {
            get
            {
                if ((this.mUIThêmkhôngthànhcôngVuText == null))
                {
                    this.mUIThêmkhôngthànhcôngVuText = new WinText(this);
                    #region Search Criteria
                    this.mUIThêmkhôngthànhcôngVuText.SearchProperties[WinText.PropertyNames.Name] = "Thêm không thành công! Vui lòng kiểm tra lại nhập liệu!";
                    this.mUIThêmkhôngthànhcôngVuText.WindowTitles.Add("Thêm không thành công! Vui lòng kiểm tra lại nhập liệu!");
                    #endregion
                }
                return this.mUIThêmkhôngthànhcôngVuText;
            }
        }
        #endregion
        
        #region Fields
        private WinText mUIThêmkhôngthànhcôngVuText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UISửakhôngthànhcôngVuiWindow : WinWindow
    {
        
        public UISửakhôngthànhcôngVuiWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Sửa không thành công! Vui lòng kiểm tra lại nhập liệu!";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Static";
            this.WindowTitles.Add("Sửa không thành công! Vui lòng kiểm tra lại nhập liệu!");
            #endregion
        }
        
        #region Properties
        public WinText UISửakhôngthànhcôngVuiText
        {
            get
            {
                if ((this.mUISửakhôngthànhcôngVuiText == null))
                {
                    this.mUISửakhôngthànhcôngVuiText = new WinText(this);
                    #region Search Criteria
                    this.mUISửakhôngthànhcôngVuiText.SearchProperties[WinText.PropertyNames.Name] = "Sửa không thành công! Vui lòng kiểm tra lại nhập liệu!";
                    this.mUISửakhôngthànhcôngVuiText.WindowTitles.Add("Sửa không thành công! Vui lòng kiểm tra lại nhập liệu!");
                    #endregion
                }
                return this.mUISửakhôngthànhcôngVuiText;
            }
        }
        #endregion
        
        #region Fields
        private WinText mUISửakhôngthànhcôngVuiText;
        #endregion
    }
}
